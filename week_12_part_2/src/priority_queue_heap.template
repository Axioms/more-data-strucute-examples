#include <cassert>

template <typename T>
priority_queue_heap<T>::priority_queue_heap() {
}

template <typename T>
bool priority_queue_heap<T>::is_empty() const {
	return h.is_empty();
}

template <typename T>
bool priority_queue_heap<T>::is_full() const {
	return h.is_full();
}

template <typename T>
T priority_queue_heap<T>::remove() {
	assert(!is_empty());
	return h.remove();
}

template <typename T>
void priority_queue_heap<T>::insert(const T& value) {
	assert(!is_full());
	h.insert(value);
}